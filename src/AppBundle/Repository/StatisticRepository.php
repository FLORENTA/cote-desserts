<?php

namespace AppBundle\Repository;

use AppBundle\Entity\StatisticType;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\EntityRepository;

/**
 * StatisticRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatisticRepository extends EntityRepository
{
    /**
     * @param StatisticType $statisticType
     * @param bool $bot
     * @param string|null $startTime
     * @param string|null $endTime
     * @return array
     */
    public function getStats(
        StatisticType $statisticType,
        $bot = false,
        string $startTime = null,
        string $endTime = null
    ): array
    {
        /** @var QueryBuilder $qb */
        $qb = $this->createQueryBuilder('s')
            ->select('COUNT(s.id) as number', 's.data')
            ->where('s.statisticType = :statistic_type')
            ->setParameter('statistic_type', $statisticType)
            ->andWhere('s.bot = :bot')
            ->setParameter('bot', $bot);

        if (null !== $startTime) {
            $qb->andWhere('s.date >= :start')
                ->setParameter('start', "$startTime 00:00:00");
        }

        if (null !== $endTime) {
            $qb->andWhere('s.date <= :end')->setParameter('end', "$endTime 23:59:59");
        }

        $qb->groupBy('s.data');

        return $qb->getQuery()->getResult();
    }

    public function deleteStatistics(): void
    {
        $this->createQueryBuilder('statistic')->delete()->getQuery()->execute();
    }
}
